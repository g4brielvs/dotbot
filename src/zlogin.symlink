#
# Executes commands at the start of every session.
#
# Authors:
#   g4brielvs <g4brielvs@g4brielvs.me>
#
# -------------------------------------------------------------------
# Build environment variables
# -------------------------------------------------------------------

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

#All commands have been installed with the prefix 'g'.
#
#If you really need to use these commands with their normal names, you
#can add a "gnubin" directory to your PATH from your bashrc like:
#
#    PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
#
#Additionally, you can access their man pages with normal names if you add
#the "gnuman" directory to your MANPATH from your bashrc as well:
#
#    MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
#

# Homebrew
# The missing package manager for macOS
# http://brew.sh
# /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
#export HOMEBREW_CASK_OPTS="--appdir=$HOME/Applications --caskroom=/usr/local/Caskroom/"

# Rbenv
# https://github.com/rbenv/rbenv
if which rbenv > /dev/null; then
    eval "$(rbenv init - zsh)"
    export PATH="$HOME/.rbenv/bin:$PATH"
fi

# Jenv
# https://github.com/gcuisinier/jenv
if which jenv > /dev/null; then
    eval "$(jenv init - zsh)"
    #export PATH="$HOME/.jenv/bin:$PATH"
fi

# Pyenv
# https://github.com/yyuu/pyenv
if which pyenv > /dev/null; then
    eval "$(pyenv init - zsh)"
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
# Pyenv virtualenv
# https://github.com/yyuu/pyenv-virtualenv
    eval "$(pyenv virtualenv-init - zsh)"
    export PYENV_VIRTUALENV_DISABLE_PROMPT=true
fi

# Pipenv
VIRTUAL_ENV_DISABLE_PROMPT=true

activate(){
    activate_file=$(pipenv --venv)/bin/activate
    if [ -e "$activate_file" ]; then
        . $activate_file

        # the pipenv shell normally enables these as well
        export PYTHONDONTWRITEBYTECODE=1
        export PIPENV_ACTIVE=1

        if [ -f "${VIRTUAL_ENV}/.project" ]; then
            cd $(cat "${VIRTUAL_ENV}/.project")
        fi
        return
    fi
}

# Virtualenvwrapper
# https://virtualenvwrapper.readthedocs.io/en/latest/
if [ -x /usr/local/bin/virtualenvwrapper.sh ] ; then
    export WORKON_HOME=$HOME/.virtualenvs
    source /usr/local/bin/virtualenvwrapper.sh
fi

# Anaconda3
# https://www.continuum.io/downloads
if [ -d /usr/local/anaconda3 ] ; then
    export PATH="/usr/local/anaconda3/bin:$PATH"
fi

# Vagrant
# https://www.vagrantup.com
#if [ -x /usr/bin/vagrant ] ; then
    export VAGRANT_DEFAULT_PROVIDER=parallels
#fi

# Docker
# https://www.docker.com
#if which docker > /dev/null; then
#    eval "$(docker-machine env default)"
#fi

# Gurobi
# http://www.gurobi.com
if [ -d /Library/gurobi751/mac64 ] ; then
    export GUROBI_HOME="/Library/gurobi751/mac64"
    export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${GUROBI_HOME}/lib"
    export GRB_LICENSE_FILE="$HOME/.gurobi/gurobi.lic"
fi

 # thefuck
 # https://github.com/nvbn/thefuck
 if which fuck > /dev/null; then
     eval "$(thefuck --alias)"
 fi

 # -------------------------------------------------------------------
 # Bullet Train for oh-my-zsh
 # https://github.com/caiogondim/bullet-train.zsh
 # -------------------------------------------------------------------

 # automatically run "pipenv shell" if we enter a pipenv project subdirectory
 # if opening a new terminal, preserve the source directory
 #export PIPENV_VENV_IN_PROJECT=false

BULLETTRAIN_VIRTUALENV_PREFIX="üêç"
BULLETTRAIN_RUBY_PREFIX="‚ô¢"
BULLETTRAIN_DIR_EXTENDED=false
BULLETTRAIN_PROMPT_ORDER=(
    time
    cmd_exec_time
    status
    custom
    dir
    perl
    virtualenv
    go
    elixir
    git
    hg
)